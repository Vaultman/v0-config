#####################################################################
#	Macros
#####################################################################

[gcode_macro PID_EXTRUDER]
gcode:
    {% set target = params.TARGET|default(210) %}
    PID_CALIBRATE HEATER=extruder TARGET={target}


[gcode_macro PID_BED]
gcode:
    {% set target = params.TARGET|default(60) %}
    PID_CALIBRATE HEATER=heater_bed TARGET={target}

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}

#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
#gcode:
#    G28                            ; home all axes
#    G1 Z20 F3000                   ; move nozzle away from bed

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    {% set BED = params.BED|default(60)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(210)|float %}
    {% set CHAMBER = params.CHAMBER|default(15)|float %}
    {% set SOAK = params.SOAK|default(0)|float %}

    # Set bed temperature and partial nozzle temperature, turn on part cooling for heating chamber
    {% if EXTRUDER >= 230 %}
      M140 S{BED}                                  ; set bed temperature
      M104 S150                                    ; set partial hotend temperature
      M106 S255                                    ; turn on part cooling fans for air circulation
      #SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0    ; turn on nevermore for ABS
    {% else %}
      M140 S{BED}                                  ; set bed temperature
      M104 S125                                    ; set partial hotend temperature
      M106 S255                                    ; turn on part cooling fans for air circulation
    {% endif %}

    G28                                            ; home all axes
    PARKCENTER                                     ; move to middle of bed
    M190 S{BED}                                    ; set final bed temperature

    # soak for defined number of minutes, default is 15m
    # originally from VinS#0204
    {% if (SOAK|int) > 0 %}
        M117 Starting Soak
        {% for timer in range( SOAK|int,0,-1) %}   ; we cycle once a minute, so we can send an update
            M117 Soak: {timer|int}m remaining
            M105
            G4 P60000 # wait 1 minute
        {% endfor %}
        M117 Soak Complete
    {% endif %}

    G28                                            ; home all axes
    PARKFRONT                                      ; move to front corner for ooze
    M109 S{EXTRUDER}                               ; heat up hotend

    # prime line for ABS, requires max_extrude_cross_section: 5 or greater under [extruder]
    # originally Stephan#8358 and unknown
    {% if BED >= 100 %}
      G92 E0                                       ; reset extruder
      G0 X3 Y3 Z0.90 F12000                        ; move to left corner of bed
      G1 X25 Y3 E40 F100                           ; extrude thicc line
      G1 X30 F18000                                ; hop over to clear nozzle
      G92 E0                                       ; reset extruder
    ## catch-all
    {% else %}
      G92 E0                                       ; reset extruder
      G0 Y0 X40                                    ; go to tongue of print bed
      G1 Z0.2 F500                                 ; move bed to nozzle
      G1 E2 F500                                   ; pre-purge prime LENGTH SHOULD MATCH YOUR PRINT_END RETRACT
      G1 X80 E8 F500                               ; intro line 1
      G1 Y0.3                                      ; move in a little
      G1 X40 E8 F500                               ; second line
      G1 Z2                                        ; move nozzle to prevent scratch
      G92 E0                                       ; reset extruder
    {% endif %}

    M117 Printing

#[gcode_macro PRINT_END]
##   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
#gcode:
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-4.0 F3600                 ; retract filament
#    G91                            ; relative positioning

#    #   Get Boundaries
#    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
#    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
#    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

#    #   Check end position to determine safe direction to move
#    {% if printer.toolhead.position.x < (max_x - 20) %}
#        {% set x_safe = 20.0 %}
#    {% else %}
#        {% set x_safe = -20.0 %}
#    {% endif %}

#    {% if printer.toolhead.position.y < (max_y - 20) %}
#        {% set y_safe = 20.0 %}
#    {% else %}
#        {% set y_safe = -20.0 %}
#    {% endif %}

#    {% if printer.toolhead.position.z < (max_z - 2) %}
#        {% set z_safe = 2.0 %}
#    {% else %}
#        {% set z_safe = max_z - printer.toolhead.position.z %}
#    {% endif %}

#    G0 Z{z_safe} F3600             ; move nozzle up
#    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
#    TURN_OFF_HEATERS
#    M107                           ; turn off fan
#    G90                            ; absolute positioning
#    G0 X60 Y{max_y} F3600          ; park nozzle at rear

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600                                    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000                         ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    #UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=300    ; turn off nevermore after 5 minutes
    M107                                                  ; turn off fan
    G90                                                   ; absolute positioning
    G0 X60 Y{max_y} F3600                                 ; park nozzle at rear

    M117

#[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print
#gcode:
#  TURN_OFF_HEATERS
#  CANCEL_PRINT_BASE
#  UPDATE_DELAYED_GCODE ID=NEVERMORE_OFF DURATION=300    ; turn off nevermore after 5 minutes
#  M106 S0
#  G91
#  G1 Z20
#  M117

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}
	
	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		
		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

#[gcode_macro LOAD_FILAMENT]
#gcode:
#   M83                            ; set extruder to relative
#   G1 E30 F300                    ; load
#   G1 E15 F150                    ; prime nozzle with filament
#   M82                            ; set extruder to absolute

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E100 F150                   ; prime nozzle with filament
   G1 E-2 F300                    ; retract to limit ooze
   M82                            ; set extruder to absolute

#[gcode_macro UNLOAD_FILAMENT]
#gcode:
#   M83                            ; set extruder to relative
#   G1 E10 F300                    ; extrude a little to soften tip
#   G1 E-40 F1800                  ; retract some, but not too much or it will jam
#   M82                            ; set extruder to absolute

[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-100 F1800                 ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PURGE_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E100 F150                   ; prime nozzle with filament
   G1 E-2 F300                    ; retract to limit ooze
   M82                            ; set extruder to absolute

######################### CONDITIONAL HOMING #########################

# Conditional G28 XYZ (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}

# Conditional G28 XY (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

# Conditional G28 Z (home if not already homed)
[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}

######################### PARKING #########################
# Originally from Ellis#4980

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F5000
	RESTORE_GCODE_STATE NAME=PARKCENTER

# Park bottom rear left
[gcode_macro PARKFRONT]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_minimum.x+3} Y{printer.toolhead.axis_minimum.y+3} Z{printer.toolhead.axis_minimum.z+5} F5000
	RESTORE_GCODE_STATE NAME=PARKFRONT

### MISC ###
#[delayed_gcode NEVERMORE_OFF]
#gcode:
#  SET_FAN_SPEED FAN=nevermore_fan SPEED=0